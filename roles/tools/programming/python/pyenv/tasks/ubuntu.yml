# See: https://github.com/pyenv/pyenv/wiki/common-build-problems
- name: Install development packages necessary for building Python
  apt:
    update_cache: yes
    pkg: "{{ item }}"
    state: present
  with_items:
    - git
    - make
    - build-essential
    - libssl-dev
    - zlib1g-dev
    - libbz2-dev
    - libreadline-dev
    - libsqlite3-dev
    - wget
    - curl
    - llvm
    - libncurses5-dev
    - libncursesw5-dev
    - xz-utils
    - tk-dev
    - libffi-dev
    - liblzma-dev

- name: Install PyEnv
  git:
    repo: https://github.com/yyuu/pyenv.git
    dest: "{{ pyenv.path }}"
    update: "{{pyenv.update_git_install}}"
  become_user: "{{pyenv.owner}}"

- name: Install PyEnv-virtualenv plugin
  git:
    repo: https://github.com/yyuu/pyenv-virtualenv.git
    dest: "{{ pyenv.path }}/plugins/pyenv-virtualenv"
    update: "{{pyenv.update_git_install}}"
  become_user: "{{pyenv.owner}}"

- name: Install .pyenvrc
  template:
    src: ".pyenvrc.j2"
    dest: "{{ pyenv.path }}/.pyenvrc"
    owner: "{{ pyenv.owner }}"
    group: "{{ pyenv.owner }}"
    mode: "0644"

- name: Load pyenv env variables in .bashrc
  lineinfile: dest="~/.bashrc"
              regexp="\.pyenvrc$"
              line="source {{ pyenv.path }}/.pyenvrc"
              state=present
              create=yes
  become_user: "{{pyenv.owner}}"

- name: Add pyenv autocomplete in .bashrc
  lineinfile: dest="~/.bashrc"
              regexp="pyenv\.bash$"
              line="source {{ pyenv.path }}/completions/pyenv.bash"
              state=present
  when: pyenv.enable_autocompletion
  become_user: "{{pyenv.owner}}"

- name: Add virtualenv auto-loading in .bashrc
  lineinfile: dest="~/.bashrc"
              regexp="pyenv virtualenv-init"
              line='eval "$(pyenv virtualenv-init -)"'
              state=present
  become_user: "{{pyenv.owner}}"

- name: Install Python interpreters "{{ pyenv.python_versions }}"
  shell: . {{ pyenv.path }}/.pyenvrc && pyenv install {{ item }}
         creates="{{ pyenv.path }}/versions/{{ item }}/bin/python"
  with_items: "{{pyenv.python_versions}}"
  become_user: "{{pyenv.owner}}"

- name: Create virtual environments
  shell: . {{ pyenv.path }}/.pyenvrc && pyenv virtualenv {{ item.py_version }} {{ item.venv_name }}
         creates="{{ pyenv.path }}/versions/{{ item.venv_name }}/bin/python"
  with_items: "{{pyenv.virtualenvs}}"
  become_user: "{{pyenv.owner}}"
  